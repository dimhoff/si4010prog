all: tune_cap_bank.ihx tune_cap_bank_map.py

tune_cap_bank.ihx: tune_cap_bank.rel
tune_cap_bank_map.py: tune_cap_bank.ihx

clean:
	@for f in tune_cap_bank; do \
		for e in ihx lnk lst map mem rel rst sym; do \
			rm -f $$f.$$e; \
		done; \
	done; \
	rm -f tune_cap_bank_map.py tune_cap_bank_map.pyc

#
# asx8051 is the assembler provided with the SDCC tools. The options provided to the assembler are:
# Option 	Purpose
#  l 	generates a list file
#  o 	generates an object file
#  ff 	flag reallocatable references by mode in listing file
#  g 	make undefined symbols be global
#  p 	disables listing pagination
#
# The "o" option is mandatory, as the linker requires list, object and symbol files to generate executables. The "ff" and "p" options generate a readable list file. The "g" option tells the assembler to not generate an error if it finds an undefined symbol that is not declared as external.
#
%.rel: %.asm
	@echo "ASM $<"; \
	/usr/bin/sdas8051 -wloffgp "$<"

#
# Option	Purpose
#  -i		Output Intel Hex
#  -m		Generate a map file
#  -b		Set base address of area
#  -e		end
#
#  WARNING: The <space> before the '-' in the echo(1) command is there on
#  purpose to prevent echo(1) from interpreting the '-' as an option(ie. '-e')
#  Yes, if your filename starts with a '-' it will also cause problems...
#
#  Sometimes sdld(1) returns with an error code but still generates the output
#  file. To fix this the extra rm(1) command is added on failure.
%.ihx: %.rel
	@echo "LD $@"; \
	{ \
		echo " -i"; \
		echo " -m"; \
		echo " -w"; \
		echo " -b _CODE = 0x80"; \
		echo " -b _XDATA = 0x800"; \
		for f in $^; do \
			echo $$f ; \
		done ; \
		echo ' -e'; \
	} | sdld -n -c || { rm "$@"; false; }

%_map.py: %.ihx
	@echo "CUSTOM $@"; \
	{ \
		echo "# WARNING: THIS FILE IS AUTO GENERATED BY THE BUILD PROCESS */" ;\
		echo "# Address where to set breakpoint(eg. address of 'loop_breakpoint' label)" ;\
		sed -n 's/^[[:space:]]*00\([[:xdigit:]]*\)[[:space:]]*loop_breakpoint[[:space:]]*$$/BP_ADDR=0x\1/p' "$*.map"; \
		echo "# Address where to load the frequency configuration in DATA memory" ;\
		sed -n 's/^[[:space:]]*00\([[:xdigit:]]*\)[[:space:]]*freq[[:space:]]*$$/ADDR_FREQ=0x\1/p' "$*.map"; \
		echo "# Address where to load the PA configuration in XDATA memory" ;\
		sed -n 's/^[[:space:]]*00\([[:xdigit:]]*\)[[:space:]]*pa_config[[:space:]]*$$/ADDR_PA_CONFIG=0x\1/p' "$*.map"; \
	} > "$@"
